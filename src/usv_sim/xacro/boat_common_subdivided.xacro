<?xml version="1.0"?>

<xacro xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:property name="PI" value="3.1415926535897931"/>

    <!-- Body properties -->
    <xacro:property name="back_body_mass" value="5"/>
    <xacro:property name="middle_body_mass" value="5"/>
    <xacro:property name="rear_body_mass" value="5"/>
    <xacro:property name="front_body_mass" value="2"/>
    <xacro:property name="back_water_displaced_mass" value="60"/>
    <xacro:property name="middle_water_displaced_mass" value="60"/>
    <xacro:property name="front_water_displaced_mass" value="25"/>

    <!-- Thruster constants -->
    <xacro:property name="tr1" value=".02" />
    <xacro:property name="tl1" value=".1" />
    <xacro:property name="tr2" value=".05" />
    <xacro:property name="tl2" value=".03" />
    <xacro:property name="eps" value="0.00000001"/>

    <link name="base_link">
        <visual>
          <origin rpy="0 0 0"/>
          <geometry>
            <mesh filename="package://usv_sim/meshes/simpleBoat-middle.stl"/>
          </geometry>
          <material name="blue"/>
        </visual>

        <collision>
          <origin rpy="0 0 0"/>
          <geometry>
            <mesh filename="package://usv_sim/meshes/simpleBoat-middle.stl"/>
          </geometry>
        </collision>

        <inertial>
            <origin rpy="0 0 0" xyz="0 0 -0.05"/>
          <mass value="${middle_body_mass}"/>
          <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="1.4" iyz="0.0" izz="1.4"/>
        </inertial>
        <buoyancy>
          <compensation>${middle_water_displaced_mass/middle_body_mass}</compensation>
          <origin xyz="0 0 0.05"/>
          <limit radius="0.1"/>
          <damping rpy="20 500 50" xyz="20 50 50"/>
        </buoyancy>
    </link>

    <link name="back_link">
        <visual>
          <origin rpy="0 0 0" xyz="-0.25 0 0"/>
          <geometry>
            <mesh filename="package://usv_sim/meshes/simpleBoat-back.stl"/>
          </geometry>
          <material name="blue"/>
        </visual>

        <collision>
          <origin rpy="0 0 0"  xyz="-0.25 0 0"/>
          <geometry>
            <mesh filename="package://usv_sim/meshes/simpleBoat-back.stl"/>
          </geometry>
        </collision>

        <inertial>
            <origin rpy="0 0 0" xyz="-0.25 0 -0.05"/>
          <mass value="${back_body_mass}"/>
          <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="1.4" iyz="0.0" izz="1.4"/>
        </inertial>
        <buoyancy>
          <compensation>${back_water_displaced_mass/back_body_mass}</compensation>
          <origin xyz="0 0 0.05"/>
          <limit radius="0.1"/>
          <damping rpy="20 500 50" xyz="20 50 50"/>
        </buoyancy>
    </link>

    <joint name="back_joint" type="revolute">
        <parent link="base_link"/>
        <child link="back_link"/>
        <origin rpy="0 0 0" xyz="-0.25 0 0"/>
	<limit effort="50" velocity="5" lower="0" upper="0" />
            <dynamics damping="1.0"/>
            <axis xyz="1 0 0"/>
    </joint>


    <link name="front_link">
        <visual>
          <origin rpy="0 0 0" xyz="0.25 0 0"/>
          <geometry>
            <mesh filename="package://usv_sim/meshes/simpleBoat-front.stl"/>
          </geometry>
          <material name="blue"/>
        </visual>

        <collision>
          <origin rpy="0 0 0" xyz="0.25 0 0"/>
          <geometry>
            <mesh filename="package://usv_sim/meshes/simpleBoat-front.stl"/>
          </geometry>
        </collision>

        <inertial>
            <origin rpy="0 0 0" xyz="0.25 0 -0.05"/>
          <mass value="${front_body_mass}"/>
          <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="1.4" iyz="0.0" izz="1.4"/>
        </inertial>
        <buoyancy>
          <compensation>${front_water_displaced_mass/front_body_mass}</compensation>
          <origin xyz="0 0 0.05"/>
          <limit radius="0.1"/>
          <damping rpy="20 500 50" xyz="20 50 50"/>
        </buoyancy>
    </link>

    <joint name="front_joint" type="revolute">
        <parent link="base_link"/>
        <child link="front_link"/>
        <origin rpy="0 0 0" xyz="0.25 0 0"/>

	<limit effort="50" velocity="5" lower="0" upper="0" />
            <dynamics damping="1.0"/>
            <axis xyz="1 0 0"/>
    </joint>

    <!-- Thruster link -->
    <xacro:macro name="thruster_link" params="name xyz rpy rotationAxis effort:=30 velocity:=5 lowerLimit upperLimit">
        <joint name="${name}_joint" type="revolute">
            <parent link="base_link"/>
            <child link="${name}"/>
            <origin rpy="${rpy}" xyz="${xyz}"/>
            <dynamics damping="10.0"/>
            <axis xyz="${rotationAxis}"/>
            <limit effort="${effort}" velocity="${velocity}" lower="${lowerLimit}" upper="${upperLimit}" />
        </joint>
        
        <link name="${name}">      
            <buoyancy><compensation>1.0</compensation></buoyancy>
            <visual name="${name}_1">
                <geometry>
                    <cylinder length="${tl1}" radius="${tr1}"/>
                </geometry>
                <material name="black">
                    <color rgba="0 0 0 1"/>
                </material>
            </visual>  

            <visual name="${name}_2">
                <origin xyz="0 0 ${(tl1+tl2)/2}"/>
                <geometry>
                    <cylinder length="${tl2}" radius="${tr2}"/>
                </geometry>
                <material name="black">
                    <color rgba="0 0 0 1"/>
                </material>
            </visual>  

            <inertial>
                <mass value=".1"/>
                <inertia
                    ixx=".1"
                    ixy="0.0"
                    ixz="0.0"
                    iyy=".1"
                    iyz="0.0"
                    izz=".1"/>
            </inertial>  
        </link>                 
            
        <gazebo reference="${name}">
            <material>Gazebo/Black</material>
        </gazebo>
    </xacro:macro>                   

    <xacro:macro name="thruster_dummy_link" params="name xyz rpy">        
        <joint name="${name}" type="fixed">
            <parent link="base_link"/>
            <child link="${name}"/>
            <origin rpy="${rpy}" xyz="${xyz}"/>
        </joint>
        <link name="${name}"/>
    </xacro:macro>  

    <!-- Rudder link -->
    <xacro:macro name="rudder_xacro">
        <link name="rudder">
            <inertial>
                <mass value="0.05" />
                <inertia
                  ixx="0.05"
                  ixy="0.0"
                  iyy="0.05"
                  ixz="0.0"
                  iyz="0.0"
                  izz="0.005"/>
            </inertial>

            <collision name="collision">
                <geometry>
                  <box size="0.1 0.02 0.3" />
                </geometry>
                <origin rpy="0 0 0" xyz="-0.1 0 0"/>
            </collision>

            <visual name="visual">
                <geometry>
                  <box size="0.1 0.02 0.3" />
                </geometry>
                <origin rpy="0 0 0" xyz="-0.1 0 0"/>
            </visual>
        </link>

        <joint name="rudder_joint" type="revolute">
            <parent link="base_link"/>
            <child link="rudder"/>
            <origin rpy="0 0 0" xyz="-0.53 0 -0.1"/>
            <dynamics damping="1.0"/>
            <axis xyz="0 0 1"/>
            <limit effort="50" velocity="5" lower="-${PI/3}" upper="${PI/3}" />
        </joint>
    </xacro:macro> 

    <!-- Sensors -->

    <!-- Hokuyo Laser -->
    <joint name="hokuyo_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz="0.7 0 0.2" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="hokuyo_link"/>
    </joint>

    <link name="hokuyo_link">
        <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
        <box size="0.1 0.1 0.1"/>
        </geometry>
        </collision>

        <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
        <mesh filename="package://usv_sim/meshes/hokuyo.stl"/>
        </geometry>
        </visual>

        <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>

    <gazebo reference="hokuyo_link">
        <sensor type="gpu_ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>40</update_rate>
        <ray>
        <scan>
        <horizontal>
        <samples>720</samples>
        <resolution>1</resolution>
        <min_angle>-1.570796</min_angle>
        <max_angle>1.570796</max_angle>
        </horizontal>
        </scan>
        <range>
        <min>0.10</min>
        <max>30.0</max>
        <resolution>0.01</resolution>
        </range>
        <noise>
        <type>gaussian</type>
        <!-- Noise parameters based on published spec for Hokuyo laser
        achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
        stddev of 0.01m will put 99.7% of samples within 0.03m of the true
        reading. -->
        <mean>0.0</mean>
        <stddev>0.01</stddev>
        </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>scan</topicName>
        <frameName>base_laser</frameName>
        </plugin>
        </sensor>
    </gazebo>

</xacro>
