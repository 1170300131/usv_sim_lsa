#!/usr/bin/env python

import rospy
from nav_msgs.msg import Odometry
from std_msgs.msg import Float64
from geometry_msgs.msg import Twist, Point, Quaternion

waypoints = [
    [(255.0, 95.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(260.0, 95.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(270.0, 95.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(280.0, 95.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(295.0, 95.0, 0.0), (0.0, 0.0, 0.0, 1.0)],

    [(295.0, 90.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(280.0, 90.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(270.0, 90.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(260.0, 90.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(255.0, 90.0, 0.0), (0.0, 0.0, 0.0, 1.0)],

    [(255.0, 85.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(260.0, 85.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(270.0, 85.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(280.0, 85.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(295.0, 85.0, 0.0), (0.0, 0.0, 0.0, 1.0)],

    [(295.0, 80.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(280.0, 80.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(270.0, 80.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(260.0, 80.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(255.0, 80.0, 0.0), (0.0, 0.0, 0.0, 1.0)],

    [(255.0, 75.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(260.0, 75.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(270.0, 75.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(280.0, 75.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(295.0, 75.0, 0.0), (0.0, 0.0, 0.0, 1.0)],

    [(295.0, 70.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(280.0, 70.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(270.0, 70.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(260.0, 70.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(255.0, 70.0, 0.0), (0.0, 0.0, 0.0, 1.0)],

    [(255.0, 65.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(260.0, 65.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(270.0, 65.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(280.0, 65.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(295.0, 65.0, 0.0), (0.0, 0.0, 0.0, 1.0)],

    [(295.0, 60.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(280.0, 60.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(270.0, 60.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(260.0, 60.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(255.0, 60.0, 0.0), (0.0, 0.0, 0.0, 1.0)],

    [(255.0, 55.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(260.0, 55.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(270.0, 55.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(280.0, 55.0, 0.0), (0.0, 0.0, 0.0, 1.0)],
    [(295.0, 55.0, 0.0), (0.0, 0.0, 0.0, 1.0)]
]

result = Float64()
result.data = 0
x_offset = 0 
y_offset = 0

def goal_pose(pose):
    goal_pose = Odometry()
    goal_pose.header.stamp = rospy.Time.now()
    goal_pose.header.frame_id = 'world'
    goal_pose.pose.pose.position = Point(pose[0][0]+x_offset, pose[0][1]+y_offset, 0.)
    return goal_pose

def get_result(result_aux):
    global result
    result.data = result_aux.data

if __name__ == '__main__':
    pub = rospy.Publisher('move_usv/goal', Odometry, queue_size=10)
    rospy.init_node('patrol')
    rate = rospy.Rate(1) # 10h
    rospy.Subscriber("move_usv/result", Float64, get_result)

    while True:
        for pose in waypoints:
            goal = goal_pose(pose)
            pub.publish(goal)
            rate.sleep()
            while result.data == 0.0:
                pub.publish(goal)
                rate.sleep()
