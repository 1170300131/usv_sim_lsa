
.. _control:

=========================
Control Strategies
=========================


Associate each boat with its correspondent control strategy in a table. 

Describe each control strategy.

The robots of this simulator have a build in movement control that we use to test some scenarios. The main objetive of this control strategy is to take the vehicle from point A to point B, point A beeing the curent position and point B beeing the desired or target position. The curent control strategy implemented is one of the simplest control strategies, called heading control.

Os robos do simulador vem com um controle de movimento que nós utilizamos para testar alguns cenário. O principal objetivo deste controle de movimento é fazer com que os robôs alcancem pontos desejáveis do ambiente. Esta primeira implementação de um controle de movimento é uma das estratégias mais simples para este tipo de controle, chama de controle de orientação.

This heading control strategy consists of doing consecutives correction of the robots heading by chosing appropriated actuators position/velocity. The idea of this control is as follows: if at each step the robot is pointing to the target point and if theres some forward velocity (in the robots frame) then eventually the vehicle will reach the desired position. Thus, what the controller does is recieve the information necessary to ajust the robots heading, namelly the curent and desired position, then calculates the proper position of the actuator to reduce the error generated by subtracting the curent and desired heading. Another part of the control must be resposible for activating the thrusters power (or at least the actuator responsable for propulsion) accordingly. The behavior generated by only using this raw erro to ajust the heading is pretty slow. To reduce this problem and set a desired behavior we use a PI strategy on the error.

O controle de orientação consiste em ajustar, em cada passo, a orientação do robô movendo nos atuadores. A ideia desta estratégia de controle é bem intuitiva: se a cada passo o robô estiver apontando (ou direcionado) para o alvo e se houver um movimento frontal então eventualmente o robô alcançará este alvo. Desta forma, o que o controlador faz é capturar informações necessárias para ajustar a orientação do robô, no caso a orientação atual e a orientação desejada, e então calcular a posição adequada para tentar corrigir o erro gerado pela diferença entre a orientação desejada e a atual. O que foi descrito anteriormente é o controle de orientação. Também deve existir um agente (controle) responsável por dar velocidade frontal ao robô, caso contrário o robô acertaria sua orientação porém ficaria parado no mesmo local e não se esforçaria para avançar ao objetivo.

The control strategy describe above is currently running in all platforms. We chose this strategy due to its simplicity that makes it quick and easy to implement. The main difference among the implemented control strategies on the platforms is how the actuation is done. For example, in the airboat the robots heading is changed according to the orientation of the fan. The rudder boat and sailboat use the rudder to change its heading. The differential boat set different thurster power on the left and right thruster to achieve heading change. The details of each control are shown below.

A ideia descrita acima é aplicada atualmente a todos os robôs. Escolhemos esta estragétia devido a sua simplicidade, o que a torna rápida e fácil de implementar. A principal diferença entre o controle que atua em cada veículo é a forma como é feita a atuação, ou seja, a ativação dos atuadores. No airboat, por exemplo, a orientação do robô é modificada de acordo com a orientação do hélice responsável pela propulsão. No barco leme e veleiro o elemento resposável por controlador a orientação é o leme. Já no barco difernecial, a orientação é modificada de acordo com as velocidades dos motores direito e esquerdo. Os detalhes de cada controlador são mostrados abaixo.

All of the controllers bellow use the same strategy to find the heading to be followed (preprossessing). First the it gets information about odometry (curent position) the the target position and it uses these information to find the heading to be followed. Then finds the error between the curent heading and the desired heading and uses the sign and absolute value of this error (with the PI gain) to find the apropriate action to correct it and bring the platform to the desired heading. For each platform:

Heading control of the airboat: Uses the heading error to find suitable fan orientation. Publishes the fan angle to /airboat/jointSetpoint.

Controle de orientação do airboat: o controlador recebe informação de odometria e do ponto alvo (ponto a ser alcançado), calcula qual a orientação a ser seguida, encontra o erro entre a orientação atual no referencial de mundo e a orientação a ser seguida e a partir deste erro retorna a orientação adequada do atuador para zerar este erro e fazer com que a orientação atual tenda a ser igual (ou mais próxima possível)  da orientação desejada. Esta orientação do atuador é então publicada no tópico /airboat/jointSetpoint fazendo com que a orientação da hélice seja ajustada.

Forward propulsion control of the airboat: We implemented this behavior as a set of conditions. If the distance to target is greater than 10 meters the propulsion (fan power) is 100%. If the distance is between 2 and 10 meters then the propusion is 50%. If the distance is less than 2 meters then the propusion is set to 0%.

Controle de velocidade linear do airboat: Consiste em ativar ou não a propulsão da hélice. Implementamos esta parte como uma série de condições. Caso o airboat esteja a mais de 10 metros do ponto objetivo, a propulção da hélice é 100%. Se estiver entre 5 metros e 10 metros a propulsão é 50%. Caso o airboat esteja a menos de 5 metros a propulsão da hélice é cessada (0%) e dizemos que o alvo foi alcançado.

Heading control of the boat rudder and sailboat: These platforms use the same rudder control, wich consists of using the heading error to find suitable rudder angles. The rudder angle is published in /boat_rudder/jointSetpoint for the boat rudder and /sailboat/jointSetpoint for the saiboat.

Controle de orientação do barco leme e veleiro: Estas plataformas possuem o mesmo tipo de controle de orientação. Igualmente ao controle de orientação do airboat, o controlador recebe os dados de entrada, encontra a orientação atual e a desejada (necessária para alcançar o objetivo; aquela que aponta ao objetivo; aquela que, caso o veículo seguisse em linha reta, faria com que o mesmo alcançasse o objetivo), encontra o erro entre estas duas orientações e calcula a posição adequada do leme para que este erro seja reduzido. A posição do leme calculada pelo controlador é então publicada nos tópicos: /sailboat/jointSetPoint para o veleiro e /boat_rudder/jointSetpoint para o barco leme.

Forward propulsion control of the Boat Rudder: Similar to the Airboat.

Controle de velocidade linear do barco leme: Possui condições semelhantes às do airboat porém a atuação feita no thruster subaquático.

Forward propulsion control of the Sailboat: Ajusts the sail position according to the wind direction.Open and closes the sail according to the wind direction on the sailboats frame: head to wind (in irons) -> close sail (0 degrees). rear to wind (running) -> open sail (90 degrees). wind betweens these positions -> sail position chosen linearly between 0 and 90 degrees.

Controle de velocidade linear do veleiro: Possui um controlador mais robusto que calcula a posição adequada da vela de acordo com a direção do vento no refencial do veleiro. Parte do principio simples de que quanto mais a frente do veleiro apontar paraa direção do vento (vento vindo em direção a frente do veleiro) mais fechada deve ser a vela e quanto mais a retaguarda do veleiro apontar para o vento (vento vindo em direção a retaguarda do veleiro) mais aberta deve ser a vela (limite de +-90 graus).

Heading controle of the Differential Boat: Uses the heading error to find suitable velocities for both thrusters (left and right). For example, a positive error means that the platform must rotate clockwise to reach the desired heading and a negative error means the platform must rotate counter clockwise (these relations depends of the defined frames). 

Controle de orientação do barco diferencial: Segue os mesmos passos descritos nos controles anteriores. Recebe/encontra a orientação atual e a orientação desejada, calcula o erro entre estas duas orientações e calcula a velocidade dos dois thruster que reduz este erro. Isto depende principalmente do sinal do erro. Um erro positivo indica que o veículo deve rotacionar no sentido horário e um erro negativo indica que o barco deve rotacionar no sentido anti-horário para alcançar a orientação desejada (a relação sinal do erro e direção da rotação depende do referencial). Isto é entao traduzido para velocidade dos motores. Por exemplo, 50% de potencia no motor 1 e -50% no motor 2 faz com que o barco rotacione no sentido horário.

Controle de velocidade linear do barco diferencial: igualmente aos descritos anteriormente segue um conjunto de condições para decidir se o barco deve ir para frente. Para conseguir velocidade linear os motores do barco (em nosso simulador) devem receber potencia de mesmo sinal (por exemplo, 50% no motor 1 e 50% no motor 2 faz com que o barco vá para frente. -50% m1 -50% m2 o barco vai de ré).


.. WARNING::

  @ To be done by Davi/Marcelo
  
